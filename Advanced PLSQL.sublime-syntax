%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Advanced PLSQL
file_extensions:
  - sql
  - ddl
  - dml
  - pks
  - pkb
  - prc
  - fnc
  - vw
  - trg
  - tps
  - tpb
  - fk
  - view

variables:
  oracle_exceptions: access_into_null|case_not_found|collection_is_null|cursor_already_open|dup_val_on_index|invalid_cursor|invalid_number|login_denied|no_data_found|not_logged_on|program_error|rowtype_mismatch|self_is_null|storage_error|subscript_beyond_count|subscript_outside_limit|sys_invalid_rowid|timeout_on_resource|too_many_rows|value_error|zero_divide|others
  end: (?i)\bend\s*(\w*)?\b

scope: source.plsql.oracle
contexts:
  main:
    - match: /\*
      push:
        - meta_scope: comment.block.oracle
        - match: \*/
          pop: true

    - match: "--.*$"
      scope: comment.line.double-dash.oracle

    - match: (?i)^\s*(create)(\s+or\s+replace)?\s+
      scope: meta.create.oracle
      captures:
        1: keyword.other.oracle
        2: keyword.other.oracle

    - match: (?i)\b(package|type)(\s+body)?\s+(\S+)(\s*(force)?\s+(authid)?\s+(current_user|.*?)?\s+(under)\s+(\w+))?
      scope: meta.package.oracle
      captures:
        1: keyword.other.oracle
        2: keyword.other.oracle
        3: entity.name.class.oracle
        5: keyword.other.oracle
        6: keyword.other.oracle
        7: support.function.builtin.other.oracle
        8: keyword.other.oracle
        9: entity.name.class.oracle

    - match: (?i)\b(cursor)\s*?(\w+)
      scope: meta.cursor.oracle
      captures:
        1: keyword.other.oracle
        2: entity.name.cursor.oracle
      push: cursor

    - match: '(?i)^\s*(type)\s+(\w{1,30})\b'
      scope: meta.type.oracle
      captures:
        1: keyword.other.oracle
        2: entity.name.type.oracle

    - match: '(?i)^\s*(overriding)?\s*((not)?\s*(final|instantiable)\s*)*\s*(static|member|constructor)?\s*(function|procedure)\s+(\w{1,30}|(\w{31,}))\b'
      scope: meta.function.oracle
      captures:
        1: keyword.other.oracle
        2: keyword.other.oracle
        3: keyword.other.oracle
        4: keyword.other.oracle
        5: keyword.other.oracle
        6: storage.type.function.oracle
        7: entity.name.function.oracle
        8: invalid.oracle
    # - match: '(?i)^\s*((not)?\s*(final|instantiable)\s*)*\s*(static|member|constructor)?\s*(procedure)\s+(\w{1,30}|(\w{31,}))\b'
    #   scope: meta.procedure.oracle
    #   captures:
    #     1: keyword.other.oracle
    #     2: keyword.other.oracle
    #     3: keyword.other.oracle
    #     4: keyword.other.oracle
    #     5: storage.type.procedure.oracle
    #     6: entity.name.procedure.oracle
    #     7: invalid.oracle

    - match: '[!<>:]?=|<>|<|>|\+|(?<!\.)\*|-|(?<!^)/|\|\|'
      scope: keyword.operator.oracle

    - match: (?i)\b(true|false|null)\b
      scope: constant.language.oracle

    - match: \b\d+(\.\d+)?\b
      scope: constant.numeric.oracle

    - match: (?i)\b(case|end\s+case|continue|goto|return)\b
      scope: keyword.control.oracle

    - match: (?i)\b(or|and|not|like)\b
      scope: keyword.operator.oracle

    - match: (?i)\b(sysdate|%(isopen|found|notfound|rowcount)|commit|rollback|sqlerrm|sql|sqlcode|current_user)\b
      scope: support.function.builtin.other.oracle

    - match: (?i)\b(avg|collect|corr|corr_\w+|count|covar_(pop|samp)|cume_dist|dense_rank|first|group_id|grouping|grouping_id|last|max|median|min|percentile_cont|percentile_disc|percent_rank|rank|regr_\w+|stats_binomial_test|stats_crosstab|stats_f_test|stats_ks_test|stats_mode|stats_mw_test|stats_one_way_anova|stats_t_test_\w+|stats_wsr_test|stddev|stddev_pop|stddev_samp|sum|var_pop|var_samp|variance)\b
      scope: support.function.builtin.aggregate.oracle

    - match: (?i)\b(ascii|asciistr|chr|compose|concat|convert|decompose|dump|initcap|instr|instrb|instrc|instr2|instr4|length|lengthb|lengthc|length2|length4|lower|lpad|ltrim|nchr|replace|rpad|rtrim|soundex|substr|translate|trim|upper|vsize)\b
      scope: support.function.builtin.char.oracle

    - match: (?i)\b(add_months|current_date|current_timestamp|dbtimezone|from_tz|last_day|localtimestamp|months_between|new_time|next_day|round|sessiontimezone|sysdate|to_date|trunc|tz_offset|systimestamp|to_char)\b
      scope: support.function.builtin.date.oracle

    - match: (?i)\b(bfilename|cardinality|coalesce|decode|empty_(blob|clob)|group_id|lag|lead|listagg|lnnvl|nanvl|nullif|nvl|nvl2|sys_(context|guid|typeid)|uid|user|userenv|cardinality|collect|powermultiset(_by_cardinality)?|set|dump|ora_hash|vsize)\b
      scope: support.function.builtin.advanced.oracle

    - match: (?i)\b(bin_to_num|cast|chartorowid|from_tz|hextoraw|numtodsinterval|numtoyminterval|rawtohex|to_char|to_clob|to_date|to_dsinterval|to_lob|to_multi_byte|to_nclob|to_number|to_single_byte|to_timestamp|to_timestamp_tz|to_yminterval)\b
      scope: support.function.builtin.convert.oracle

    - match: (?i)\b(abs|acos|asin|atan|atan2|avg|bin_to_num|bit_(and|or|xor)|ceil|corr|cos|cosh|covar_pop|covar_samp|count|cume_dist|dense_rank|exp|extract|floor|greatest|least|ln|log|max|median|min|mod|power|rank|remainder|round|sign|sin|sinh|sqrt|stddev|sum|tan|tanh|trunc|var_pop|var_samp|variance)\b
      scope: support.function.builtin.math.oracle

    - match: (?i)\b(\.(count|delete|exists|extend|first|last|limit|next|prior|trim))\b
      scope: support.function.builtin.collection.oracle

    - match: (?i)\b(cluster_id|cluster_probability|cluster_set|feature_id|feature_set|feature_value|prediction|prediction_cost|prediction_details|prediction_probability|prediction_set)\b
      scope: support.function.builtin.data_mining.oracle

    - match: (?i)\b(appendchildxml|deletexml|depth|extract (xml)|existsnode|extractvalue|insertchildxml|insertxmlbefore|path|sys_dburigen|sys_xmlagg|sys_xmlgen|updatexml|xmlagg|xmlcdata|xmlcolattval|xmlcomment|xmlconcat|xmlforest|xmlparse|xmlpi|xmlquery|xmlroot|xmlsequence|xmlserialize|xmltable|xmltransform)\b
      scope: support.function.builtin.xml.oracle

    - match: (?i)\b(pragma\s+(autonomous_transaction|serially_reusable|restrict_references|exception_init|inline))\b
      scope: keyword.other.pragma.oracle
    
    - match: '(?i)\b(p(?:(i|o|io))?_(\w{1,27}|(\w{28,})))\b'
      scope: variable.parameter.oracle
      captures:
        4: invalid.oracle
    
    - match: '(?i)\b((l|g)_(\w{1,27}|(\w{28,})))\b'
      scope: variable.standard.oracle
      captures:
        5: invalid.oracle
    
    - match: (?i)\b(connect\s+by\s+(nocycle\s+)?(prior|level)|connect_by_(root|icycle)|level|start\s+with|)\b
      scope: keyword.hierarchical.sql.oracle
    
    - match: (?i)\b(deterministic|declare|in|out|nocopy|as|exit|open|fetch|into|close|subtype|constant|type|rowtype|default|exclusive|mode|lock|record|index\s+by|result_cache|final|force|final|instantiable|authid|under)\b
      scope: keyword.other.oracle
    
    - match: (?i)\b(with|select|from|where|order\s+(siblings\s+)?by|group\s+by|rollup|cube|((left|right|cross|inner)\s+(outer\s+)?)?join|on|asc|desc|update|set|insert|into|values|delete|from|distinct|union|minus|intersect|having|limit|table|between|like|of|all|any|exists|rownum|returning|comment\s+on\s+(table|column))\b
      scope: keyword.other.sql.oracle
    
    - match: (?i)\b({{oracle_exceptions}})\b
      scope: support.type.exception.oracle
    
    - match: (?i)\b((dbms|utl|owa)_\w+.(\w+))\b
      scope: support.function.oracle
      captures:
        3: support.class.oracle
    
    - match: (?i)\b(raise|raise_application_error)\b
      scope: support.function.oracle

    - match: (?i)\b(char|varchar2|nchar|nvarchar2|boolean|date|timestamp(\s+with(\s+local)?\s+time\s+zone)?|interval\s+(year\s+to\s+month|day\s+to\s+second)|blob|clob|nclob|bfile|long|long\s+raw|raw|number|integer|float|binary_(float|double|integer)|pls_(float|double|integer)|rowid|urowid|vararray)\b
      scope: storage.type.builtin.oracle

    - match: (?i)\b(define|drop|cascade|tablespace|identified\s+by)|((materialized\s+)?view|sequence|trigger|grant|revoke|unique|index)\b
      scope: keyword.other.oracle
    
    - match: "'"
      push:
        - meta_scope: string.quoted.single.oracle
        - match: "'"
          pop: true
    - match: 'q''\['
      push:
        - meta_scope: string.quoted.q.oracle
        - match: '\]'''
          pop: true
    
    - match: q'\(
      push:
        - meta_scope: string.quoted.q.oracle
        - match: \)'
          pop: true
    
    - match: 'q''\{'
      push:
        - meta_scope: string.quoted.q.oracle
        - match: '\}'''
          pop: true
    
    - match: q'<
      push:
        - meta_scope: string.quoted.q.oracle
        - match: ">'"
          pop: true
    
    - match: q'\!
      push:
        - meta_scope: string.quoted.q.oracle
        - match: \!'
          pop: true
    - match: \(
      push: brackets

    - match: (?i)\bis\b
      scope: keyword.block.is.oracle
      push: declare_block

    - match: (?i)\bif\b
      scope: keyword.control.oracle
      push: if_condition_block

    - match: (?i)\bwhile\b
      scope: keyword.control.oracle
      push: loop_condition_block

    - match: (?i)\b(for)\s*(.*)\s*(in)\b
      captures:
        1: keyword.control.oracle
        2: variable.loop.oracle
        3: keyword.other.oracle
      push: loop_condition_block

    - match: (?i)\belsif\b
      scope: keyword.control.oracle
      set: if_condition_block

    - match: (?i)\belse\b
      scope: keyword.control.oracle
      set: if_block_end

    - match: (?i)\bbegin\b
      scope: keyword.block.begin.oracle
      push: begin_block

    - match: (?i)\b(when)\s+({{oracle_exceptions}}|(.*))\s+(then)\b
      scope: meta.block.whencondition.oracle
      captures:
        1: keyword.other.oracle
        2: support.type.exception.any
        3: entity.name.exception.oracle
        4: keyword.other.oracle


    # all the overlapping things!
    - match: \)
      scope: invalid.oracle
    - match: end
      scope: invalid.oracle

# if|elsif|else|loop|for|while
  
  
  # for/wile.. <... condition block ..> loop
  loop_condition_block:
    - meta_content_scope: meta.block.loopcondition.oracle
    - match: (?i)\bloop\b
      scope: keyword.block.loop.oracle
      set: loop_block_end
  loop_block_end:
    - meta_content_scope: meta.block.loopblock.oracle
    - match: (?i)\b(end\s+loop)\b
      scope: keyword.block.endif.oracle
      pop: true
    - include: main

  # if <... if condition block ..> then
  if_condition_block:
    - meta_content_scope: meta.block.ifcondition.oracle
    - match: (?i)\bthen\b
      scope: keyword.block.beginif.oracle
      set: if_block_end
  if_block_end:
    - meta_content_scope: meta.block.ifblock.oracle
    - match: (?i)\belse\b
      scope: keyword.block.else.oracle
      set: if_block_end
    - match: (?i)\b(end\s+if)\b
      scope: keyword.block.endif.oracle
      pop: true
    - include: main
  declare_block:
    - meta_content_scope: meta.block.declare.oracle
    - match: (?i)\bbegin\b
      scope: keyword.block.begin.oracle
      set: begin_block
    - include: main

  begin_block:
    - meta_content_scope: meta.block.begin.oracle
    - match: '{{end}}'
      scope: keyword.block.end.oracle
      captures:
        1: entity.name.function.oracle
      pop: true
    - include: main
    - meta_content_scope: meta.block.begin.oracle
    - match: (?i)\bexception\b
      scope: keyword.other.oracle
      set: exception_block

  exception_block:
    - meta_content_scope: meta.block.exception.oracle
    - match: '{{end}}'
      captures:
        1: entity.name.function.oracle
      scope: keyword.block.end.oracle
      pop: true
    - include: main

  cursor:
    - meta_content_scope: meta.cursor
    - match: ;
      scope: keyword.block.is.cursor.oracle
      pop: true

  brackets:
    - match: \)
      pop: true
    - include: main
